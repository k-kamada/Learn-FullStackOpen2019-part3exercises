{"version":3,"sources":["Components/Filter.js","services/persons.js","Components/PersonForm.js","Components/Persons.js","Components/Notification.js","Components/Error.js","App.js","index.js"],"names":["Filter","filterWord","setFilterWord","value","onChange","event","target","baseUrl","getAll","axios","get","then","response","data","create","newPerson","post","update","selectedPerson","put","id","deletePerson","delete","PersonForm","props","newName","setNewName","newNumber","setNewNumber","type","onClick","preventDefault","samePerson","persons","find","person","name","window","confirm","PersonService","number","returnedPerson","newPersons","map","setPersons","setNotificationMessage","setTimeout","catch","setErrorMessage","filter","concat","error","errorMsg","Persons","matchedPersons","toLowerCase","includes","key","p","result","deleteSelected","Notification","message","className","Error","App","useState","notificationMessage","errorMessage","useEffect","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d201b634.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({filterWord, setFilterWord}) => {\n  const handleSearchWordChange = (event) => {\n    setFilterWord(event.target.value);\n  }\n\n  return (\n      <input value={filterWord} onChange={handleSearchWordChange} />\n  );\n};\n\n\nexport default Filter;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = ( newPerson ) => {\n  const request = axios.post(baseUrl, newPerson);\n  return request.then(response => response.data);\n};\n\nconst update = ( selectedPerson ) => {\n  const request = axios.put(`${baseUrl}/${selectedPerson.id}`, selectedPerson);\n  return request.then(response => response.data);\n}\n\nconst deletePerson = ( id ) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n}\n\nexport default {getAll, create, update, deletePerson}\n","import React from 'react';\nimport PersonService from './../services/persons';\n\nconst PersonForm = (props) => {\n  const handleNameChange = (event) => {\n    props.setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    props.setNewNumber(event.target.value);\n  };\n\n  const handleAddName = (event) => {\n    event.preventDefault();\n    const samePerson = props.persons.find(person => person.name === props.newName);\n    if (samePerson) {\n      const result = window.confirm(`${props.newName} is already added to phonebook, replace the old number with a new one?`);\n      if (result) {\n        PersonService.update({name: samePerson.name, number:props.newNumber, id:samePerson.id})\n          .then(returnedPerson => {\n            const newPersons = props.persons.map(person => person.name !== samePerson.name ? person : returnedPerson);\n            props.setPersons(newPersons);\n            props.setNotificationMessage(`Updated ${props.newName}`)\n            setTimeout(() => {props.setNotificationMessage(null)}, 5000);\n          })\n          .catch(() => {\n            props.setErrorMessage(`Imformation of ${props.newName} has already been removed from server!`);\n            setTimeout(() => {props.setErrorMessage(null)},5000);\n            const newPersons = props.persons.filter(person => person.name !== props.newName);\n            props.setPersons(newPersons);\n          });\n\n      }\n      return;\n    }\n    PersonService.create({name: props.newName, number:props.newNumber})\n      .then(returnedPerson => {\n        props.setPersons(props.persons.concat(returnedPerson));\n        props.setNotificationMessage(`Added ${returnedPerson.name}`)\n        setTimeout(() => {props.setNotificationMessage(null)}, 5000);\n      })\n      .catch(error => {\n        const errorMsg = error.response.data.error;\n        props.setErrorMessage(errorMsg);\n        setTimeout(() => {props.setErrorMessage(null)},5000);\n      });\n  };\n\n  return (\n    <form>\n      <div>\n        name: \n          <input \n            value={props.newName}\n            onChange={handleNameChange}\n          />\n        <br />\n        number:\n          <input\n            value={props.newNumber}\n            onChange={handleNumberChange}\n          />\n      </div>\n      <div>\n        <button \n          type=\"submit\"\n          onClick={handleAddName}\n        >\n          add\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({ persons, filterWord, deletePerson, setPersons, setNotificationMessage, setErrorMessage }) => {\n  const matchedPersons = persons.filter(\n    person => person.name.toLowerCase().includes(filterWord.toLowerCase())\n  );\n\n  const deleteSelected = (id) => {\n    const selectedPerson = persons.find(p => p.id === id);\n    if (!window.confirm(`Delete ${selectedPerson.name} ?`)) {\n      return;\n    }\n\n    deletePerson(id)\n      .then(result => {\n        setNotificationMessage(`Deleted ${selectedPerson.name}.`);\n      })\n      .catch(error => {\n        setErrorMessage(`Imformation of ${id} has already been removed from server!`);\n        setTimeout(() => {setErrorMessage(null)},5000);\n      });\n\n    const newPersons = persons.filter(p => p.id !== id);\n    setPersons(newPersons);\n  }\n\n  const rows = matchedPersons.map(\n    person => <p key={person.name}>\n                {person.name} {person.number} \n                <button onClick={() => {deleteSelected(person.id)}}>delete</button>\n              </p>\n  );\n\n  return (rows);\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  );\n}\n\nexport default Notification;\n","import React from 'react';\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  );\n}\n\nexport default Error;\n","import React, { useState, useEffect } from 'react';\nimport Filter from './Components/Filter';\nimport PersonForm from './Components/PersonForm';\nimport Persons from './Components/Persons';\nimport PersonService from './services/persons'\nimport Notification from './Components/Notification';\nimport Error from './Components/Error';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filterWord, setFilterWord] = useState('');\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    PersonService.getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons);\n      });\n  },[]);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notificationMessage} />\n      <Error message={errorMessage} />\n\n      <Filter filterWord={filterWord} setFilterWord={setFilterWord}/>\n\n      <h3>add a new</h3>\n\n      <PersonForm \n        persons={persons}\n        setPersons={setPersons}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        setNotificationMessage={setNotificationMessage}\n        setErrorMessage={setErrorMessage}\n      />\n\n      <h3>Numbers</h3>\n      \n      <Persons \n        persons={persons} \n        filterWord={filterWord} \n        deletePerson={PersonService.deletePerson}\n        setPersons={setPersons}\n        setNotificationMessage={setNotificationMessage}\n        setErrorMessage={setErrorMessage}\n      />\n\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}